{"prompt": "Write a function to save results to a file", "function": "save_results", "status": "pass", "details": "File write/read test passed (content='hello')", "timestamp": "2025-09-14T18:55:28.267857"}
{"prompt": "Sort the data efficiently", "function": "sort_list", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T18:55:28.274753"}
{"prompt": "Build a classifier for spam detection", "function": null, "status": "unsupported", "details": "Function not in supported list", "timestamp": "2025-09-14T18:55:28.282269"}
{"prompt": "Compute factorial of a number", "function": "factorial", "status": "fail", "details": "Expected 120, got None (likely missing return)", "timestamp": "2025-09-14T18:55:28.298734"}
{"prompt": "Generate Fibonacci sequence", "function": "fibonacci", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T18:55:28.304794"}
{"prompt": "Check if a number is prime", "function": "is_prime", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T18:55:28.309002"}
{"prompt": "Reverse a given string", "function": "reverse_string", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T18:55:28.313798"}
{"prompt": "Write factorial but forget the return", "function": "factorial", "status": "fail", "details": "Expected 120, got None (likely missing return)", "timestamp": "2025-09-14T18:55:28.319317"}
{"prompt": "Write a function to save results to a file", "function": "save_results", "status": "pass", "details": "File write/read test passed (content='hello')", "timestamp": "2025-09-14T22:14:22.982741"}
{"prompt": "Sort the data efficiently", "function": "sort_list", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:14:23.036530"}
{"prompt": "Build a classifier for spam detection", "function": null, "status": "unsupported", "details": "Function not in supported list", "timestamp": "2025-09-14T22:14:23.040119"}
{"prompt": "Compute factorial of a number", "function": "factorial", "status": "fail", "details": "Expected 120, got None (likely missing return)", "timestamp": "2025-09-14T22:14:23.044247"}
{"prompt": "Generate Fibonacci sequence", "function": "fibonacci", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:14:23.068120"}
{"prompt": "Check if a number is prime", "function": "is_prime", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:14:23.071343"}
{"prompt": "Reverse a given string", "function": "reverse_string", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:14:23.074046"}
{"prompt": "Write factorial but forget the return", "function": "factorial", "status": "fail", "details": "Expected 120, got None (likely missing return)", "timestamp": "2025-09-14T22:14:23.078520"}
{"prompt": "Write a function to save results to a file", "function": "save_results", "status": "pass", "details": "File write/read test passed (content='hello')", "timestamp": "2025-09-14T22:23:53.627868"}
{"prompt": "Sort the data efficiently", "function": "sort_list", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:23:53.706467"}
{"prompt": "Build a classifier for spam detection", "function": null, "status": "unsupported", "details": "Function not in supported list", "timestamp": "2025-09-14T22:23:53.712849"}
{"prompt": "Compute factorial of a number", "function": "factorial", "status": "fail", "details": "Expected 120, got None (likely missing return)", "timestamp": "2025-09-14T22:23:53.718994"}
{"prompt": "Generate Fibonacci sequence", "function": "fibonacci", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:23:53.767174"}
{"prompt": "Check if a number is prime", "function": "is_prime", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:23:53.824325"}
{"prompt": "Reverse a given string", "function": "reverse_string", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:23:53.828795"}
{"prompt": "Write factorial but forget the return", "function": "factorial", "status": "fail", "details": "Expected 120, got None (likely missing return)", "timestamp": "2025-09-14T22:23:53.837540"}
{"prompt": "Compute gcd of two numbers", "function": "gcd", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:23:53.843624"}
{"prompt": "Find the lcm of two values", "function": "lcm", "status": "error", "details": "Runtime error: name 'gcd' is not defined", "timestamp": "2025-09-14T22:23:53.847685"}
{"prompt": "Raise a number to a power", "function": "power", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:23:53.852854"}
{"prompt": "Push an element to a stack", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:23:53.855695"}
{"prompt": "Pop an element from a stack", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:23:53.858760"}
{"prompt": "Merge two dictionaries", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:23:53.862507"}
{"prompt": "Read contents of a file", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:23:53.865452"}
{"prompt": "Append text to a file", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:23:53.868471"}
{"prompt": "Check if a string is palindrome", "function": "is_palindrome", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:23:53.872008"}
{"prompt": "Count the number of words in a string", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:23:53.875613"}
{"prompt": "Write a function to save results to a file", "function": "save_results", "status": "pass", "details": "File write/read test passed (content='hello')", "timestamp": "2025-09-14T22:29:06.622689"}
{"prompt": "Sort the data efficiently", "function": "sort_list", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:29:06.627948"}
{"prompt": "Build a classifier for spam detection", "function": null, "status": "unsupported", "details": "Function not in supported list", "timestamp": "2025-09-14T22:29:06.632577"}
{"prompt": "Compute factorial of a number", "function": "factorial", "status": "fail", "details": "Expected 120, got None (likely missing return)", "timestamp": "2025-09-14T22:29:06.640022"}
{"prompt": "Generate Fibonacci sequence", "function": "fibonacci", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:29:06.648256"}
{"prompt": "Check if a number is prime", "function": "is_prime", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:29:06.653660"}
{"prompt": "Reverse a given string", "function": "reverse_string", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:29:06.659084"}
{"prompt": "Write factorial but forget the return", "function": "factorial", "status": "fail", "details": "Expected 120, got None (likely missing return)", "timestamp": "2025-09-14T22:29:06.666791"}
{"prompt": "Compute gcd of two numbers", "function": "gcd", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:29:06.674848"}
{"prompt": "Find the lcm of two values", "function": "gcd", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:29:06.679517"}
{"prompt": "Raise a number to a power", "function": "power", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:29:06.683637"}
{"prompt": "Push an element to a stack", "function": "stack_push", "status": "pass", "details": "All 1 test cases passed", "timestamp": "2025-09-14T22:29:06.689123"}
{"prompt": "Pop an element from a stack", "function": "stack_pop", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:29:06.694123"}
{"prompt": "Merge two dictionaries", "function": "merge_dicts", "status": "pass", "details": "All 1 test cases passed", "timestamp": "2025-09-14T22:29:06.699635"}
{"prompt": "Read contents of a file", "function": "read_file", "status": "pass", "details": "File read test passed (content='sample text')", "timestamp": "2025-09-14T22:29:06.845588"}
{"prompt": "Append text to a file", "function": "append_to_file", "status": "pass", "details": "File append test passed (content='hello world')", "timestamp": "2025-09-14T22:29:07.012972"}
{"prompt": "Check if a string is palindrome", "function": "is_palindrome", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:29:07.021174"}
{"prompt": "Count the number of words in a string", "function": "word_count", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:29:07.027456"}
{"prompt": "Write a function to save results to a file", "function": "save_results", "status": "pass", "details": "File write/read test passed (content='hello')", "timestamp": "2025-09-14T22:32:58.652706"}
{"prompt": "Sort the data efficiently", "function": "sort_list", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:32:58.659927"}
{"prompt": "Build a classifier for spam detection", "function": null, "status": "unsupported", "details": "Function not in supported list", "timestamp": "2025-09-14T22:32:58.665604"}
{"prompt": "Compute factorial of a number", "function": "factorial", "status": "fail", "details": "Expected 120, got None (likely missing return)", "timestamp": "2025-09-14T22:32:58.671158"}
{"prompt": "Generate Fibonacci sequence", "function": "fibonacci", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:32:58.679918"}
{"prompt": "Check if a number is prime", "function": "is_prime", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:32:58.684196"}
{"prompt": "Reverse a given string", "function": "reverse_string", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:32:58.688917"}
{"prompt": "Write factorial but forget the return", "function": "factorial", "status": "fail", "details": "Expected 120, got None (likely missing return)", "timestamp": "2025-09-14T22:32:58.696161"}
{"prompt": "Compute gcd of two numbers", "function": "gcd", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:32:58.701213"}
{"prompt": "Find the lcm of two values", "function": "gcd", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:32:58.705722"}
{"prompt": "Raise a number to a power", "function": "power", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:32:58.710001"}
{"prompt": "Push an element to a stack", "function": "stack_push", "status": "pass", "details": "All 1 test cases passed", "timestamp": "2025-09-14T22:32:58.714008"}
{"prompt": "Pop an element from a stack", "function": "stack_pop", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:32:58.717152"}
{"prompt": "Merge two dictionaries", "function": "merge_dicts", "status": "pass", "details": "All 1 test cases passed", "timestamp": "2025-09-14T22:32:58.720596"}
{"prompt": "Read contents of a file", "function": "read_file", "status": "pass", "details": "File read test passed (content='sample text')", "timestamp": "2025-09-14T22:32:58.729131"}
{"prompt": "Append text to a file", "function": "append_to_file", "status": "pass", "details": "File append test passed (content='hello world')", "timestamp": "2025-09-14T22:32:58.737258"}
{"prompt": "Check if a string is palindrome", "function": "is_palindrome", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:32:58.741672"}
{"prompt": "Count the number of words in a string", "function": "word_count", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:32:58.745718"}
{"prompt": "Write a function to compress data", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:32:58.749392"}
{"prompt": "Make a broken function without colon", "function": null, "status": "error", "details": "Execution failed: expected ':' (<string>, line 1)", "timestamp": "2025-09-14T22:32:58.752966"}
{"prompt": "Draw a 3D cube using OpenGL", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:32:58.759234"}
{"prompt": "Write a function to save results to a file", "function": "save_results", "status": "pass", "details": "File write/read test passed (content='hello')", "timestamp": "2025-09-14T22:35:03.042063"}
{"prompt": "Sort the data efficiently", "function": "sort_list", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:35:03.047931"}
{"prompt": "Build a classifier for spam detection", "function": null, "status": "unsupported", "details": "Function not in supported list", "timestamp": "2025-09-14T22:35:03.052398"}
{"prompt": "Compute factorial of a number", "function": "factorial", "status": "fail", "details": "Expected 120, got None (likely missing return)", "timestamp": "2025-09-14T22:35:03.061270"}
{"prompt": "Generate Fibonacci sequence", "function": "fibonacci", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:35:03.067936"}
{"prompt": "Check if a number is prime", "function": "is_prime", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:35:03.072883"}
{"prompt": "Reverse a given string", "function": "reverse_string", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:35:03.077560"}
{"prompt": "Write factorial but forget the return", "function": "factorial", "status": "fail", "details": "Expected 120, got None (likely missing return)", "timestamp": "2025-09-14T22:35:03.084038"}
{"prompt": "Compute gcd of two numbers", "function": "gcd", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:35:03.089837"}
{"prompt": "Find the lcm of two values", "function": "gcd", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:35:03.094308"}
{"prompt": "Raise a number to a power", "function": "power", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:35:03.098293"}
{"prompt": "Push an element to a stack", "function": "stack_push", "status": "pass", "details": "All 1 test cases passed", "timestamp": "2025-09-14T22:35:03.102240"}
{"prompt": "Pop an element from a stack", "function": "stack_pop", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:35:03.106216"}
{"prompt": "Merge two dictionaries", "function": "merge_dicts", "status": "pass", "details": "All 1 test cases passed", "timestamp": "2025-09-14T22:35:03.110058"}
{"prompt": "Read contents of a file", "function": "read_file", "status": "pass", "details": "File read test passed (content='sample text')", "timestamp": "2025-09-14T22:35:03.117866"}
{"prompt": "Append text to a file", "function": "append_to_file", "status": "pass", "details": "File append test passed (content='hello world')", "timestamp": "2025-09-14T22:35:03.125588"}
{"prompt": "Check if a string is palindrome", "function": "is_palindrome", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:35:03.129891"}
{"prompt": "Count the number of words in a string", "function": "word_count", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:35:03.133525"}
{"prompt": "Write a function to compress data", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:35:03.137019"}
{"prompt": "Make a broken function without colon", "function": null, "status": "error", "details": "Execution failed: expected ':' (<string>, line 1)", "timestamp": "2025-09-14T22:35:03.140383"}
{"prompt": "Draw a 3D cube using OpenGL", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:35:03.145874"}
{"prompt": "Write a function to save results to a file", "function": "save_results", "status": "pass", "details": "File write/read test passed (content='hello')", "timestamp": "2025-09-14T22:36:55.743746"}
{"prompt": "Sort the data efficiently", "function": "sort_list", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:36:55.750640"}
{"prompt": "Build a classifier for spam detection", "function": null, "status": "unsupported", "details": "Function not in supported list", "timestamp": "2025-09-14T22:36:55.757744"}
{"prompt": "Compute factorial of a number", "function": "factorial", "status": "fail", "details": "Expected 120, got None (likely missing return)", "timestamp": "2025-09-14T22:36:55.767033"}
{"prompt": "Generate Fibonacci sequence", "function": "fibonacci", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:36:55.776324"}
{"prompt": "Check if a number is prime", "function": "is_prime", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:36:55.782620"}
{"prompt": "Reverse a given string", "function": "reverse_string", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:36:55.787697"}
{"prompt": "Write factorial but forget the return", "function": "factorial", "status": "fail", "details": "Expected 120, got None (likely missing return)", "timestamp": "2025-09-14T22:36:55.794851"}
{"prompt": "Compute gcd of two numbers", "function": "gcd", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:36:55.803454"}
{"prompt": "Find the lcm of two values", "function": "gcd", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:36:55.809890"}
{"prompt": "Raise a number to a power", "function": "power", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:36:55.815190"}
{"prompt": "Push an element to a stack", "function": "stack_push", "status": "pass", "details": "All 1 test cases passed", "timestamp": "2025-09-14T22:36:55.820681"}
{"prompt": "Pop an element from a stack", "function": "stack_pop", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:36:55.827857"}
{"prompt": "Merge two dictionaries", "function": "merge_dicts", "status": "pass", "details": "All 1 test cases passed", "timestamp": "2025-09-14T22:36:55.833341"}
{"prompt": "Read contents of a file", "function": "read_file", "status": "pass", "details": "File read test passed (content='sample text')", "timestamp": "2025-09-14T22:36:55.843340"}
{"prompt": "Append text to a file", "function": "append_to_file", "status": "pass", "details": "File append test passed (content='hello world')", "timestamp": "2025-09-14T22:36:55.852816"}
{"prompt": "Check if a string is palindrome", "function": "is_palindrome", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:36:55.859246"}
{"prompt": "Count the number of words in a string", "function": "word_count", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:36:55.865132"}
{"prompt": "Write a function to compress data", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:36:55.870219"}
{"prompt": "Make a broken function without colon", "function": null, "status": "error", "details": "Execution failed: expected ':' (<string>, line 1)", "timestamp": "2025-09-14T22:36:55.876125"}
{"prompt": "Draw a 3D cube using OpenGL", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:36:55.884025"}
{"prompt": "Check if a number is even or odd", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:40:34.642625"}
{"prompt": "Find the minimum element in a list", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:40:34.649999"}
{"prompt": "Push an element to a stack", "function": "stack_push", "status": "pass", "details": "All 1 test cases passed", "timestamp": "2025-09-14T22:40:34.657039"}
{"prompt": "Sort the data efficiently", "function": "sort_list", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:40:34.664061"}
{"prompt": "Generate Fibonacci sequence", "function": "fibonacci", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:40:34.670342"}
{"prompt": "Write factorial but forget the return", "function": "factorial", "status": "fail", "details": "Expected 120, got None (likely missing return)", "timestamp": "2025-09-14T22:40:34.682828"}
{"prompt": "Read contents of a file", "function": "read_file", "status": "pass", "details": "File read test passed (content='sample text')", "timestamp": "2025-09-14T22:40:34.697019"}
{"prompt": "Count vowels in a string", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:40:34.714300"}
{"prompt": "Count the number of words in a string", "function": "word_count", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:40:34.720655"}
{"prompt": "Remove duplicates from a list", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:40:34.726528"}
{"prompt": "Find common elements between two lists", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:40:38.762023"}
{"prompt": "Check if a string is palindrome", "function": "is_palindrome", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:40:38.768563"}
{"prompt": "Find the lcm of two values", "function": "gcd", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:40:38.773909"}
{"prompt": "Build a classifier for spam detection", "function": null, "status": "unsupported", "details": "Function not in supported list", "timestamp": "2025-09-14T22:40:38.780840"}
{"prompt": "Find the minimum element in a list", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:40:38.786281"}
{"prompt": "Calculate the sum of a list of numbers", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:40:38.790889"}
{"prompt": "Push an element to a stack", "function": "stack_push", "status": "pass", "details": "All 1 test cases passed", "timestamp": "2025-09-14T22:40:38.795147"}
{"prompt": "Write a function to compress data", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:40:38.799003"}
{"prompt": "Compute gcd of two numbers", "function": "gcd", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:40:38.804499"}
{"prompt": "Compute factorial of a number", "function": "factorial", "status": "fail", "details": "Expected 120, got None (likely missing return)", "timestamp": "2025-09-14T22:40:41.723928"}
{"prompt": "Draw a 3D cube using OpenGL", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:40:41.732139"}
{"prompt": "Pop an element from a stack", "function": "stack_pop", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:40:41.738163"}
{"prompt": "Count the number of words in a string", "function": "word_count", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:40:41.743589"}
{"prompt": "Convert a string to lowercase", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:40:41.748861"}
{"prompt": "Reverse a given string", "function": "reverse_string", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:40:41.755848"}
{"prompt": "Check if two strings are anagrams", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:40:48.914730"}
{"prompt": "Calculate the sum of a list of numbers", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:40:48.921515"}
{"prompt": "Build a classifier for spam detection", "function": null, "status": "unsupported", "details": "Function not in supported list", "timestamp": "2025-09-14T22:40:48.927382"}
{"prompt": "Flatten a nested list", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:40:48.933453"}
{"prompt": "Reverse a given string", "function": "reverse_string", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:40:48.939016"}
{"prompt": "Write factorial but forget the return", "function": "factorial", "status": "fail", "details": "Expected 120, got None (likely missing return)", "timestamp": "2025-09-14T22:40:53.089175"}
{"prompt": "Find the lcm of two values", "function": "gcd", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:40:53.098700"}
{"prompt": "Generate Fibonacci sequence", "function": "fibonacci", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:40:53.104660"}
{"prompt": "Check if a string is palindrome", "function": "is_palindrome", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:40:53.109647"}
{"prompt": "Check if a number is prime", "function": "is_prime", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:40:53.114654"}
{"prompt": "Remove duplicates from a list", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:40:53.119217"}
{"prompt": "Compute gcd of two numbers", "function": "gcd", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:40:53.124925"}
{"prompt": "Check if a number is even or odd", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:40:54.879358"}
{"prompt": "Read contents of a file", "function": "read_file", "status": "pass", "details": "File read test passed (content='sample text')", "timestamp": "2025-09-14T22:40:54.889900"}
{"prompt": "Calculate the sum of a list of numbers", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:40:54.895083"}
{"prompt": "Check if a string is palindrome", "function": "is_palindrome", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:40:54.899955"}
{"prompt": "Push an element to a stack", "function": "stack_push", "status": "pass", "details": "All 1 test cases passed", "timestamp": "2025-09-14T22:40:54.906612"}
{"prompt": "Find common elements between two lists", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:40:54.911551"}
{"prompt": "Write a function to compress data", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:40:54.916013"}
{"prompt": "Pop an element from a stack", "function": "stack_pop", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:40:54.922946"}
{"prompt": "Write factorial but forget the return", "function": "factorial", "status": "fail", "details": "Expected 120, got None (likely missing return)", "timestamp": "2025-09-14T22:40:54.929888"}
{"prompt": "Find common elements between two lists", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:40:57.139211"}
{"prompt": "Read contents of a file", "function": "read_file", "status": "pass", "details": "File read test passed (content='sample text')", "timestamp": "2025-09-14T22:40:57.149151"}
{"prompt": "Append text to a file", "function": "append_to_file", "status": "pass", "details": "File append test passed (content='hello world')", "timestamp": "2025-09-14T22:40:57.159399"}
{"prompt": "Build a classifier for spam detection", "function": null, "status": "unsupported", "details": "Function not in supported list", "timestamp": "2025-09-14T22:40:57.165688"}
{"prompt": "Merge two dictionaries", "function": "merge_dicts", "status": "pass", "details": "All 1 test cases passed", "timestamp": "2025-09-14T22:40:57.171462"}
{"prompt": "Compute gcd of two numbers", "function": "gcd", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:40:57.177291"}
{"prompt": "Calculate the sum of a list of numbers", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:40:57.182299"}
{"prompt": "Check if a number is even or odd", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:40:57.188104"}
{"prompt": "Find the lcm of two values", "function": "gcd", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:40:57.193187"}
{"prompt": "Find the lcm of two values", "function": "gcd", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:41:04.109208"}
{"prompt": "Write factorial but forget the return", "function": "factorial", "status": "fail", "details": "Expected 120, got None (likely missing return)", "timestamp": "2025-09-14T22:41:04.117689"}
{"prompt": "Merge two dictionaries", "function": "merge_dicts", "status": "pass", "details": "All 1 test cases passed", "timestamp": "2025-09-14T22:41:04.127006"}
{"prompt": "Remove duplicates from a list", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:41:04.132793"}
{"prompt": "Check if a string is palindrome", "function": "is_palindrome", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:41:04.138526"}
{"prompt": "Check if two strings are anagrams", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:41:04.144301"}
{"prompt": "Find common elements between two lists", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:41:04.149934"}
{"prompt": "Capitalize the first letter of each word in a string", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:41:04.155202"}
{"prompt": "Reverse a given string", "function": "reverse_string", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:41:04.161134"}
{"prompt": "Find the lcm of two values", "function": "gcd", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:41:05.865146"}
{"prompt": "Make a broken function without colon", "function": null, "status": "error", "details": "Execution failed: expected ':' (<string>, line 1)", "timestamp": "2025-09-14T22:41:05.871449"}
{"prompt": "Flatten a nested list", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:41:05.880385"}
{"prompt": "Compute gcd of two numbers", "function": "gcd", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:41:05.886115"}
{"prompt": "Build a classifier for spam detection", "function": null, "status": "unsupported", "details": "Function not in supported list", "timestamp": "2025-09-14T22:41:05.891962"}
{"prompt": "Convert a string to uppercase", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:41:05.898913"}
{"prompt": "Compute factorial of a number", "function": "factorial", "status": "fail", "details": "Expected 120, got None (likely missing return)", "timestamp": "2025-09-14T22:41:05.905973"}
{"prompt": "Write a function to calculate square root", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-14T22:41:05.914603"}
{"prompt": "Count the number of words in a string", "function": "word_count", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-14T22:41:05.920016"}
{"prompt": "Write a function to save results to a file", "function": "save_results", "status": "pass", "details": "File write/read test passed (content='hello')", "timestamp": "2025-09-14T22:41:05.931406"}
{"prompt": "Compute gcd of two numbers", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T10:29:12.532013"}
{"prompt": "Draw a 3D cube using OpenGL", "function": null, "status": "pass", "details": "pass\n\nthe code correctly sets up an opengl context and draws a colored 3d cube. it initializes the necessary opengl settings, defines the cube's vertices and colors, and handles the display loop properly. the use of `glut` functions for window management and rendering is appropriate for this task.", "timestamp": "2025-09-15T10:29:36.075659"}
{"prompt": "Append text to a file", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T10:29:41.594152"}
{"prompt": "Count vowels in a string", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T10:29:45.380633"}
{"prompt": "Check if a number is even or odd", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T10:29:49.070748"}
{"prompt": "Raise a number to a power", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T10:29:52.542273"}
{"prompt": "Count the number of words in a string", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T10:29:54.912854"}
{"prompt": "Check if a string is palindrome", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T10:38:04.608707"}
{"prompt": "Find the minimum element in a list", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T10:38:12.412805"}
{"prompt": "Find common elements between two lists", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T10:38:18.831375"}
{"prompt": "Reverse a given string", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T10:38:23.365195"}
{"prompt": "Count the number of words in a string", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T10:38:26.036143"}
{"prompt": "Compute gcd of two numbers", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T10:38:28.975614"}
{"prompt": "Convert a string to uppercase", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T10:38:32.071728"}
{"prompt": "Count vowels in a string", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T10:41:06.573869"}
{"prompt": "Draw a 3D cube using OpenGL", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T10:41:25.324883"}
{"prompt": "Count the number of words in a string", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T10:41:29.636815"}
{"prompt": "Convert a string to uppercase", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T10:41:35.494690"}
{"prompt": "Write a function to save results to a file", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T10:41:41.394441"}
{"prompt": "Make a broken function without colon", "function": null, "status": "fail", "details": "fail\n\nthe code has a syntax error due to a missing colon (:) at the end of the function definition line.", "timestamp": "2025-09-15T10:41:45.369778"}
{"prompt": "Build a classifier for spam detection", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T10:41:56.935885"}
{"prompt": "Check if a number is even or odd", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T10:42:00.127063"}
{"prompt": "Append text to a file", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T10:42:04.126813"}
{"prompt": "Convert a string to uppercase", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T10:44:26.409947"}
{"prompt": "Check if two strings are anagrams", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T10:44:26.409947"}
{"prompt": "Read contents of a file", "function": "read_file", "status": "pass", "details": "File read test passed (content='sample text')", "timestamp": "2025-09-15T10:44:26.629696"}
{"prompt": "Write a function to compress data", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T10:44:26.645351"}
{"prompt": "Find the minimum element in a list", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T10:44:26.660966"}
{"prompt": "Flatten a nested list", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T10:44:26.660966"}
{"prompt": "Pop an element from a stack", "function": "stack_pop", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T10:44:26.660966"}
{"prompt": "Draw a 3D cube using OpenGL", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T10:44:45.743261"}
{"prompt": "Write a function to calculate square root", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T10:44:45.743261"}
{"prompt": "Convert a string to lowercase", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T10:44:45.758903"}
{"prompt": "Remove duplicates from a list", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T10:44:45.758903"}
{"prompt": "Write a function to compress data", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T10:44:45.758903"}
{"prompt": "Build a classifier for spam detection", "function": null, "status": "unsupported", "details": "Function not in supported list", "timestamp": "2025-09-15T10:44:45.774660"}
{"prompt": "Pop an element from a stack", "function": "stack_pop", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T10:47:44.177240"}
{"prompt": "Convert a string to uppercase", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T10:47:44.192885"}
{"prompt": "Count the number of words in a string", "function": "word_count", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T10:47:44.192885"}
{"prompt": "Append text to a file", "function": "append_to_file", "status": "pass", "details": "File append test passed (content='hello world')", "timestamp": "2025-09-15T10:47:44.397114"}
{"prompt": "Write a function to save results to a file", "function": "save_results", "status": "pass", "details": "File write/read test passed (content='hello')", "timestamp": "2025-09-15T10:47:44.444358"}
{"prompt": "Generate Fibonacci sequence", "function": "fibonacci", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T10:47:44.459581"}
{"prompt": "Draw a 3D cube using OpenGL", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T10:47:44.459581"}
{"prompt": "Check if a number is prime", "function": "is_prime", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T10:47:58.265767"}
{"prompt": "Push an element to a stack", "function": "stack_push", "status": "pass", "details": "All 1 test cases passed", "timestamp": "2025-09-15T10:47:58.281392"}
{"prompt": "Merge two dictionaries", "function": "merge_dicts", "status": "pass", "details": "All 1 test cases passed", "timestamp": "2025-09-15T10:47:58.281392"}
{"prompt": "Pop an element from a stack", "function": "stack_pop", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T10:47:58.281392"}
{"prompt": "Convert a string to uppercase", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T10:47:58.297003"}
{"prompt": "Merge two dictionaries", "function": "merge_dicts", "status": "pass", "details": "All 1 test cases passed", "timestamp": "2025-09-15T10:48:04.222732"}
{"prompt": "Check if a number is even or odd", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T10:48:04.238348"}
{"prompt": "Find the minimum element in a list", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T10:48:04.238348"}
{"prompt": "Find the maximum element in a list", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T10:48:04.253968"}
{"prompt": "Calculate the sum of a list of numbers", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T10:48:04.253968"}
{"prompt": "Raise a number to a power", "function": "power", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T10:48:04.253968"}
{"prompt": "Count the number of words in a string", "function": "word_count", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T10:48:04.269595"}
{"prompt": "Write a function to compress data", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T10:53:43.841451"}
{"prompt": "Write a function to calculate square root", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T10:53:52.747408"}
{"prompt": "Find the lcm of two values", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T10:53:55.669279"}
{"prompt": "Compute gcd of two numbers", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T10:53:58.581848"}
{"prompt": "Flatten a nested list", "function": null, "status": "pass", "details": "pass\n\nthe code correctly implements a recursive function to flatten a nested list. it checks if each item is a list and recursively flattens it, appending non-list items directly to the result.", "timestamp": "2025-09-15T10:54:02.882883"}
{"prompt": "Count vowels in a string", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T10:54:06.679460"}
{"prompt": "Convert a string to uppercase", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T10:54:09.224611"}
{"prompt": "Reverse a given string", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T10:54:13.131512"}
{"prompt": "Check if a string is palindrome", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T10:54:15.880342"}
{"prompt": "Find the maximum element in a list", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T10:54:19.269436"}
{"prompt": "Sort the data efficiently", "function": "sort_list", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T11:26:38.878586"}
{"prompt": "Merge two dictionaries", "function": "merge_dicts", "status": "pass", "details": "All 1 test cases passed", "timestamp": "2025-09-15T11:26:38.894209"}
{"prompt": "Push an element to a stack", "function": "stack_push", "status": "pass", "details": "All 1 test cases passed", "timestamp": "2025-09-15T11:26:38.894209"}
{"prompt": "Reverse a given string", "function": "reverse_string", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T11:26:38.909832"}
{"prompt": "Flatten a nested list", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T11:26:38.909832"}
{"prompt": "Write a function to save results to a file", "function": "save_results", "status": "pass", "details": "File write/read test passed (content='hello')", "timestamp": "2025-09-15T11:26:38.925454"}
{"prompt": "Pop an element from a stack", "function": "stack_pop", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T11:26:39.101051"}
{"prompt": "Write a function to save results to a file", "function": "save_results", "status": "pass", "details": "File write/read test passed (content='hello')", "timestamp": "2025-09-15T11:43:06.141130"}
{"prompt": "Push an element to a stack", "function": "stack_push", "status": "pass", "details": "All 1 test cases passed", "timestamp": "2025-09-15T11:43:06.157139"}
{"prompt": "Pop an element from a stack", "function": "stack_pop", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T11:43:06.157139"}
{"prompt": "Draw a 3D cube using OpenGL", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T11:43:06.157139"}
{"prompt": "Flatten a nested list", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T11:43:06.157139"}
{"prompt": "Merge two dictionaries", "function": "merge_dicts", "status": "pass", "details": "All 1 test cases passed", "timestamp": "2025-09-15T11:43:06.172384"}
{"prompt": "Append text to a file", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T11:44:01.471439"}
{"prompt": "Check if two strings are anagrams", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T11:48:39.770966"}
{"prompt": "Count the number of words in a string", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T11:48:41.568838"}
{"prompt": "Compute gcd of two numbers", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T11:48:58.315573"}
{"prompt": "Pop an element from a stack", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T11:49:00.630554"}
{"prompt": "Write factorial but forget the return", "function": null, "status": "fail", "details": "fail\n\nthe function does not return the factorial value; it only prints it. it should return the result instead of printing it to be more useful for further calculations.", "timestamp": "2025-09-15T11:49:28.976018"}
{"prompt": "Sort the data efficiently", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T11:49:39.024794"}
{"prompt": "Raise a number to a power", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T11:49:43.861857"}
{"prompt": "Check if two strings are anagrams", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T11:49:46.386638"}
{"prompt": "Make a broken function without colon", "function": null, "status": "fail", "details": "fail - the function is missing a colon (:) at the end of the function definition line.", "timestamp": "2025-09-15T11:49:53.571607"}
{"prompt": "Write a function to calculate square root", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T11:50:06.573038"}
{"prompt": "Find common elements between two lists", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T11:50:11.535043"}
{"prompt": "Calculate the sum of a list of numbers", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T11:50:15.532887"}
{"prompt": "Pop an element from a stack", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T11:50:17.626244"}
{"prompt": "Generate Fibonacci sequence", "function": null, "status": "fail", "details": "fail\n\nthe code does not correctly handle the `start` parameter. the `start` parameter is intended to determine whether the fibonacci sequence should start from 0 or 1, but the function uses `start` as a boolean flag instead of an integer value. the logic for setting `a` and `b` based on `start` is incorrect. the function should check if `start` is 0 or 1, not just whether it is `true` or `false`.", "timestamp": "2025-09-15T11:50:24.639550"}
{"prompt": "Make a broken function without colon", "function": null, "status": "fail", "details": "fail - the code has a syntax error due to a missing colon after the function definition and a missing closing parenthesis in the print statement.", "timestamp": "2025-09-15T11:55:38.184499"}
{"prompt": "Count the number of words in a string", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T11:55:46.417715"}
{"prompt": "Find common elements between two lists", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T11:55:51.807302"}
{"prompt": "Append text to a file", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T11:55:56.566269"}
{"prompt": "Write a function to save results to a file", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T11:56:10.716290"}
{"prompt": "Check if a string is palindrome", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T11:56:13.927985"}
{"prompt": "Convert a string to uppercase", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T11:56:17.717238"}
{"prompt": "Build a classifier for spam detection", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T11:56:30.221085"}
{"prompt": "Compute factorial of a number", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T11:56:35.930711"}
{"prompt": "Count the number of words in a string", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T11:59:06.568186"}
{"prompt": "Check if a number is even or odd", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T11:59:13.259111"}
{"prompt": "Push an element to a stack", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T11:59:22.709326"}
{"prompt": "Capitalize the first letter of each word in a string", "function": null, "status": "fail", "details": "fail\n\nthe `title()` method does not correctly capitalize all words in a string, especially for words that are not properly capitalized in certain contexts (e.g., \"don't\" becomes \"don't\"). a more robust solution would involve splitting the string into words, capitalizing each word individually, and then joining them back together.", "timestamp": "2025-09-15T11:59:25.806211"}
{"prompt": "Flatten a nested list", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T11:59:32.267429"}
{"prompt": "Write a function to save results to a file", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T11:59:42.913364"}
{"prompt": "Check if two strings are anagrams", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T11:59:47.672401"}
{"prompt": "Convert a string to lowercase", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T11:59:49.949951"}
{"prompt": "Reverse a given string", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T12:03:12.087812"}
{"prompt": "Sort the data efficiently", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T12:03:22.656486"}
{"prompt": "Write a function to compress data", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T12:03:30.033570"}
{"prompt": "Generate Fibonacci sequence", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T12:03:35.742353"}
{"prompt": "Append text to a file", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T12:03:40.041674"}
{"prompt": "Write factorial but forget the return", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T12:03:45.285746"}
{"prompt": "Check if a number is even or odd", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T12:03:48.508988"}
{"prompt": "Compute factorial of a number", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T12:03:56.922316"}
{"prompt": "Check if two strings are anagrams", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T12:03:59.675307"}
{"prompt": "Make a broken function without colon", "function": null, "status": "fail", "details": "fail - the code has a syntax error due to a missing colon at the end of the function definition and a missing closing parenthesis in the print statement.", "timestamp": "2025-09-15T12:04:05.238863"}
{"prompt": "Count the number of words in a string", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T12:04:51.126371"}
{"prompt": "Compute factorial of a number", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T12:05:03.509266"}
{"prompt": "Read contents of a file", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T12:05:14.822208"}
{"prompt": "Find the lcm of two values", "function": "gcd", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T12:05:47.821388"}
{"prompt": "Convert a string to lowercase", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T12:05:47.821388"}
{"prompt": "Check if a number is prime", "function": "is_prime", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T12:05:47.821388"}
{"prompt": "Read contents of a file", "function": "read_file", "status": "pass", "details": "File read test passed (content='sample text')", "timestamp": "2025-09-15T12:05:47.837029"}
{"prompt": "Write factorial but forget the return", "function": "factorial", "status": "fail", "details": "Expected 120, got None (likely missing return)", "timestamp": "2025-09-15T12:05:47.837029"}
{"prompt": "Capitalize the first letter of each word in a string", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T12:05:47.852638"}
{"prompt": "Build a classifier for spam detection", "function": null, "status": "unsupported", "details": "Function not in supported list", "timestamp": "2025-09-15T12:05:47.852638"}
{"prompt": "Write factorial but forget the return", "function": "factorial", "status": "fail", "details": "Expected 120, got None (likely missing return)", "timestamp": "2025-09-15T12:05:53.285261"}
{"prompt": "Sort the data efficiently", "function": "sort_list", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T12:05:57.410742"}
{"prompt": "Find the lcm of two values", "function": "gcd", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T12:05:57.410742"}
{"prompt": "Check if a string is palindrome", "function": "is_palindrome", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T12:05:57.410742"}
{"prompt": "Calculate the sum of a list of numbers", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T12:13:25.821696"}
{"prompt": "Count the number of words in a string", "function": "word_count", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T12:13:56.322497"}
{"prompt": "Write factorial but forget the return", "function": "factorial", "status": "fail", "details": "Expected 120, got None (likely missing return)", "timestamp": "2025-09-15T12:13:56.326512"}
{"prompt": "Generate Fibonacci sequence", "function": "fibonacci", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T12:13:56.326512"}
{"prompt": "Write a function to compress data", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T12:13:56.342153"}
{"prompt": "Count vowels in a string", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T12:13:56.342153"}
{"prompt": "Sort the data efficiently", "function": "sort_list", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T12:14:01.718714"}
{"prompt": "Queue class with enqueue/dequeue.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T20:26:49.096330"}
{"prompt": "Print current working directory.", "function": "system", "status": "pass", "details": "System utility code detected", "timestamp": "2025-09-15T20:27:14.331481"}
{"prompt": "Check if 29 is prime.", "function": "is_prime", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T20:27:28.935115"}
{"prompt": "Extract phone (123-456-7890) from text.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T20:27:42.956445"}
{"prompt": "Count sentences in 'Hello. How are you? Fine.'", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T20:27:43.065823"}
{"prompt": "Check if 29 is prime.", "function": "is_prime", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T20:38:49.580589"}
{"prompt": "Find depth of binary tree root-left-right.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T20:38:59.531629"}
{"prompt": "Replace 'cat' with 'dog' in 'The cat sat'.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T20:41:04.445487"}
{"prompt": "Parse '{\"a\":1,\"b\":2}' \u2192 print keys.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T20:41:04.449518"}
{"prompt": "Insert [1,'Alice'] into users table.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T20:41:18.265289"}
{"prompt": "Check if 'madam' is palindrome.", "function": "is_palindrome", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T20:41:25.577411"}
{"prompt": "Print date/time in YYYY-MM-DD.", "function": "system", "status": "pass", "details": "System utility code detected", "timestamp": "2025-09-15T20:41:29.736849"}
{"prompt": "Measure time to run loop 1\u201310000.", "function": "system", "status": "pass", "details": "System utility code detected", "timestamp": "2025-09-15T20:41:32.356671"}
{"prompt": "Generate first 10 Fibonacci numbers.", "function": "fibonacci", "status": "fail", "details": "Input 1: expected [0, 0], got [0]", "timestamp": "2025-09-15T20:41:35.275514"}
{"prompt": "Extract phone (123-456-7890) from text.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T20:41:38.858923"}
{"prompt": "Extract all integers from 'a1 b22 c333'.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T20:41:41.655074"}
{"prompt": "Run 'echo hello'.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T20:41:41.665174"}
{"prompt": "Check if 29 is prime.", "function": "is_prime", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T20:45:36.595420"}
{"prompt": "Find depth of binary tree root-left-right.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T20:45:41.395654"}
{"prompt": "Replace 'cat' with 'dog' in 'The cat sat'.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T20:45:41.395654"}
{"prompt": "Parse '{\"a\":1,\"b\":2}' \u2192 print keys.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T20:45:41.395654"}
{"prompt": "Insert [1,'Alice'] into users table.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T20:45:41.406745"}
{"prompt": "Check if 'madam' is palindrome.", "function": "is_palindrome", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T20:45:48.014455"}
{"prompt": "Print date/time in YYYY-MM-DD.", "function": "system", "status": "pass", "details": "System utility code detected", "timestamp": "2025-09-15T20:45:48.017138"}
{"prompt": "Measure time to run loop 1\u201310000.", "function": "system", "status": "pass", "details": "System utility code detected", "timestamp": "2025-09-15T20:45:57.225304"}
{"prompt": "Generate first 10 Fibonacci numbers.", "function": "fibonacci", "status": "fail", "details": "Input 1: expected [0, 0], got [0]", "timestamp": "2025-09-15T20:45:57.235191"}
{"prompt": "Extract phone (123-456-7890) from text.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T20:45:57.239201"}
{"prompt": "Check if 29 is prime.", "function": null, "status": "unsupported", "details": "Execution failed: invalid syntax (<string>, line 1)", "timestamp": "2025-09-15T20:46:04.985461"}
{"prompt": "Find depth of binary tree root-left-right.", "function": null, "status": "unsupported", "details": "Execution failed: invalid syntax (<string>, line 1)", "timestamp": "2025-09-15T20:46:28.997439"}
{"prompt": "Replace 'cat' with 'dog' in 'The cat sat'.", "function": null, "status": "unsupported", "details": "Execution failed: invalid syntax (<string>, line 1)", "timestamp": "2025-09-15T20:46:31.346928"}
{"prompt": "Parse '{\"a\":1,\"b\":2}' \u2192 print keys.", "function": "system", "status": "pass", "details": "System utility code detected", "timestamp": "2025-09-15T20:46:47.250063"}
{"prompt": "Insert [1,'Alice'] into users table.", "function": "database", "status": "pass", "details": "Database code detected", "timestamp": "2025-09-15T20:47:12.855247"}
{"prompt": "Check if 'madam' is palindrome.", "function": null, "status": "unsupported", "details": "Execution failed: invalid syntax (<string>, line 1)", "timestamp": "2025-09-15T20:47:15.127290"}
{"prompt": "Print date/time in YYYY-MM-DD.", "function": "system", "status": "pass", "details": "System utility code detected", "timestamp": "2025-09-15T20:47:25.075441"}
{"prompt": "Measure time to run loop 1\u201310000.", "function": "system", "status": "pass", "details": "System utility code detected", "timestamp": "2025-09-15T20:47:43.705119"}
{"prompt": "Generate first 10 Fibonacci numbers.", "function": null, "status": "unsupported", "details": "Execution failed: invalid syntax (<string>, line 1)", "timestamp": "2025-09-15T20:47:46.006518"}
{"prompt": "Extract phone (123-456-7890) from text.", "function": null, "status": "unsupported", "details": "Execution failed: invalid syntax (<string>, line 1)", "timestamp": "2025-09-15T20:48:03.366818"}
{"prompt": "Check if 29 is prime.", "function": "is_prime", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T20:48:08.984014"}
{"prompt": "Find depth of binary tree root-left-right.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T20:48:36.974860"}
{"prompt": "Replace 'cat' with 'dog' in 'The cat sat'.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T20:48:37.895931"}
{"prompt": "Parse '{\"a\":1,\"b\":2}' \u2192 print keys.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T20:50:02.946787"}
{"prompt": "Insert [1,'Alice'] into users table.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T20:50:13.718520"}
{"prompt": "Check if 'madam' is palindrome.", "function": "is_palindrome", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T20:50:14.606378"}
{"prompt": "Print date/time in YYYY-MM-DD.", "function": "system", "status": "pass", "details": "System utility code detected", "timestamp": "2025-09-15T20:50:21.189055"}
{"prompt": "Measure time to run loop 1\u201310000.", "function": "system", "status": "pass", "details": "System utility code detected", "timestamp": "2025-09-15T20:50:32.082168"}
{"prompt": "Generate first 10 Fibonacci numbers.", "function": "fibonacci", "status": "fail", "details": "Input 1: expected [0, 0], got [0]", "timestamp": "2025-09-15T20:50:32.851979"}
{"prompt": "Extract phone (123-456-7890) from text.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T20:50:41.906753"}
{"prompt": "Check if 29 is prime.", "function": "is_prime", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T20:53:18.592962"}
{"prompt": "Find depth of binary tree root-left-right.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T20:53:21.559985"}
{"prompt": "Replace 'cat' with 'dog' in 'The cat sat'.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T20:53:21.563159"}
{"prompt": "Parse '{\"a\":1,\"b\":2}' \u2192 print keys.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T20:53:21.567104"}
{"prompt": "Insert [1,'Alice'] into users table.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T20:53:21.570105"}
{"prompt": "Check if 'madam' is palindrome.", "function": "is_palindrome", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T20:53:24.774780"}
{"prompt": "Print date/time in YYYY-MM-DD.", "function": "system", "status": "pass", "details": "System utility code detected", "timestamp": "2025-09-15T20:53:24.794804"}
{"prompt": "Measure time to run loop 1\u201310000.", "function": "system", "status": "pass", "details": "System utility code detected", "timestamp": "2025-09-15T20:53:28.839292"}
{"prompt": "Generate first 10 Fibonacci numbers.", "function": "fibonacci", "status": "fail", "details": "Input 1: expected [0, 0], got [0]", "timestamp": "2025-09-15T20:53:28.842291"}
{"prompt": "Extract phone (123-456-7890) from text.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T20:53:28.849050"}
{"prompt": "Check if 29 is prime.", "function": null, "status": "unsupported", "details": "Execution failed: invalid syntax (<string>, line 1)", "timestamp": "2025-09-15T20:53:36.906847"}
{"prompt": "Find depth of binary tree root-left-right.", "function": null, "status": "unsupported", "details": "Execution failed: invalid syntax (<string>, line 1)", "timestamp": "2025-09-15T20:53:56.709238"}
{"prompt": "Replace 'cat' with 'dog' in 'The cat sat'.", "function": null, "status": "unsupported", "details": "Execution failed: invalid syntax (<string>, line 1)", "timestamp": "2025-09-15T20:53:58.679899"}
{"prompt": "Parse '{\"a\":1,\"b\":2}' \u2192 print keys.", "function": "system", "status": "pass", "details": "System utility code detected", "timestamp": "2025-09-15T20:54:05.653358"}
{"prompt": "Insert [1,'Alice'] into users table.", "function": "database", "status": "pass", "details": "Database code detected", "timestamp": "2025-09-15T20:56:36.557843"}
{"prompt": "Check if 'madam' is palindrome.", "function": null, "status": "unsupported", "details": "Execution failed: invalid syntax (<string>, line 1)", "timestamp": "2025-09-15T20:56:38.418647"}
{"prompt": "Print date/time in YYYY-MM-DD.", "function": "system", "status": "pass", "details": "System utility code detected", "timestamp": "2025-09-15T20:56:44.091697"}
{"prompt": "Measure time to run loop 1\u201310000.", "function": "system", "status": "pass", "details": "System utility code detected", "timestamp": "2025-09-15T20:56:55.576533"}
{"prompt": "Generate first 10 Fibonacci numbers.", "function": null, "status": "unsupported", "details": "Execution failed: invalid syntax (<string>, line 1)", "timestamp": "2025-09-15T20:56:58.776739"}
{"prompt": "Extract phone (123-456-7890) from text.", "function": null, "status": "unsupported", "details": "Execution failed: invalid syntax (<string>, line 1)", "timestamp": "2025-09-15T20:57:01.468410"}
{"prompt": "Check if 29 is prime.", "function": "is_prime", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T20:57:08.736529"}
{"prompt": "Find depth of binary tree root-left-right.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T20:57:22.486458"}
{"prompt": "Replace 'cat' with 'dog' in 'The cat sat'.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T20:57:23.746525"}
{"prompt": "Parse '{\"a\":1,\"b\":2}' \u2192 print keys.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T20:57:27.399526"}
{"prompt": "Insert [1,'Alice'] into users table.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T20:57:36.677949"}
{"prompt": "Check if 'madam' is palindrome.", "function": "is_palindrome", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T20:57:37.796673"}
{"prompt": "Print date/time in YYYY-MM-DD.", "function": "system", "status": "pass", "details": "System utility code detected", "timestamp": "2025-09-15T20:57:47.036358"}
{"prompt": "Measure time to run loop 1\u201310000.", "function": "system", "status": "pass", "details": "System utility code detected", "timestamp": "2025-09-15T20:57:52.792019"}
{"prompt": "Generate first 10 Fibonacci numbers.", "function": "fibonacci", "status": "fail", "details": "Input 1: expected [0, 0], got [0]", "timestamp": "2025-09-15T20:57:53.496514"}
{"prompt": "Extract phone (123-456-7890) from text.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T20:57:57.676317"}
{"prompt": "Train CNN with TensorFlow here.", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T21:14:02.219870"}
{"prompt": "Print value of PATH.", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T21:14:04.530075"}
{"prompt": "Count lines in story.txt.", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T21:14:18.810338"}
{"prompt": "Find max in [3,8,2].", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T21:14:21.372852"}
{"prompt": "Run BFS on {0:[1,2],1:[2],2:[3],3:[]}.", "function": null, "status": "pass", "details": "pass\n\nthe code correctly implements a breadth-first search (bfs) algorithm on a directed graph represented as an adjacency list. it initializes the queue with the starting node, processes each node by marking it as visited, and appends it to the bfs order list. the code also correctly extends the queue with the neighbors of the current node. the output will be the correct bfs traversal order starting from node 0.", "timestamp": "2025-09-15T21:14:46.323296"}
{"prompt": "Replace 'cat' with 'dog' in 'The cat sat'.", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T21:14:48.623133"}
{"prompt": "Queue class with enqueue/dequeue.", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T21:16:20.528396"}
{"prompt": "Check 'test@mail.com' valid.", "function": null, "status": "pass", "details": "pass\n\nthe code correctly checks if the email format is valid using a regular expression and then extracts the domain part if the email is valid. the use of `split('@')[-1]` ensures that the domain is correctly retrieved.", "timestamp": "2025-09-15T21:16:36.781312"}
{"prompt": "Merge a.txt and b.txt into merged.txt.", "function": null, "status": "pass", "details": "pass", "timestamp": "2025-09-15T21:16:52.414336"}
{"prompt": "Check if 29 is prime.", "function": "is_prime", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T21:26:00.096747"}
{"prompt": "Find depth of binary tree root-left-right.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T21:26:05.512756"}
{"prompt": "Replace 'cat' with 'dog' in 'The cat sat'.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T21:26:05.512756"}
{"prompt": "Parse '{\"a\":1,\"b\":2}' \u2192 print keys.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T21:26:05.528354"}
{"prompt": "Insert [1,'Alice'] into users table.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T21:26:05.528354"}
{"prompt": "Check if 'madam' is palindrome.", "function": "is_palindrome", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T21:26:08.372102"}
{"prompt": "Print date/time in YYYY-MM-DD.", "function": "system", "status": "pass", "details": "System utility code detected", "timestamp": "2025-09-15T21:26:08.372102"}
{"prompt": "Measure time to run loop 1\u201310000.", "function": "system", "status": "pass", "details": "System utility code detected", "timestamp": "2025-09-15T21:26:11.968032"}
{"prompt": "Generate first 10 Fibonacci numbers.", "function": "fibonacci", "status": "fail", "details": "Input 1: expected [0, 0], got [0]", "timestamp": "2025-09-15T21:26:11.968032"}
{"prompt": "Extract phone (123-456-7890) from text.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T21:26:11.999302"}
{"prompt": "Check if 29 is prime.", "function": null, "status": "unsupported", "details": "Execution failed: invalid syntax (<string>, line 1)", "timestamp": "2025-09-15T21:26:19.682698"}
{"prompt": "Find depth of binary tree root-left-right.", "function": null, "status": "unsupported", "details": "Execution failed: invalid syntax (<string>, line 1)", "timestamp": "2025-09-15T21:26:29.435805"}
{"prompt": "Replace 'cat' with 'dog' in 'The cat sat'.", "function": null, "status": "unsupported", "details": "Execution failed: invalid syntax (<string>, line 1)", "timestamp": "2025-09-15T21:26:31.015420"}
{"prompt": "Parse '{\"a\":1,\"b\":2}' \u2192 print keys.", "function": "system", "status": "pass", "details": "System utility code detected", "timestamp": "2025-09-15T21:26:38.144848"}
{"prompt": "Insert [1,'Alice'] into users table.", "function": "database", "status": "pass", "details": "Database code detected", "timestamp": "2025-09-15T21:26:46.298801"}
{"prompt": "Check if 'madam' is palindrome.", "function": null, "status": "unsupported", "details": "Execution failed: invalid syntax (<string>, line 1)", "timestamp": "2025-09-15T21:26:47.941621"}
{"prompt": "Print date/time in YYYY-MM-DD.", "function": "system", "status": "pass", "details": "System utility code detected", "timestamp": "2025-09-15T21:26:59.972099"}
{"prompt": "Measure time to run loop 1\u201310000.", "function": "system", "status": "pass", "details": "System utility code detected", "timestamp": "2025-09-15T21:27:04.894904"}
{"prompt": "Generate first 10 Fibonacci numbers.", "function": null, "status": "unsupported", "details": "Execution failed: invalid syntax (<string>, line 1)", "timestamp": "2025-09-15T21:27:07.145583"}
{"prompt": "Extract phone (123-456-7890) from text.", "function": "regex", "status": "pass", "details": "Regex pattern usage detected", "timestamp": "2025-09-15T21:27:11.413036"}
{"prompt": "Check if 29 is prime.", "function": "is_prime", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T21:27:18.066217"}
{"prompt": "Find depth of binary tree root-left-right.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T21:27:29.209888"}
{"prompt": "Replace 'cat' with 'dog' in 'The cat sat'.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T21:27:29.944231"}
{"prompt": "Parse '{\"a\":1,\"b\":2}' \u2192 print keys.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T21:27:32.616129"}
{"prompt": "Insert [1,'Alice'] into users table.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T21:27:35.352707"}
{"prompt": "Check if 'madam' is palindrome.", "function": "is_palindrome", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T21:27:36.587075"}
{"prompt": "Print date/time in YYYY-MM-DD.", "function": "system", "status": "pass", "details": "System utility code detected", "timestamp": "2025-09-15T21:27:39.151064"}
{"prompt": "Measure time to run loop 1\u201310000.", "function": "system", "status": "pass", "details": "System utility code detected", "timestamp": "2025-09-15T21:27:42.089630"}
{"prompt": "Generate first 10 Fibonacci numbers.", "function": "fibonacci", "status": "fail", "details": "Input 1: expected [0, 0], got [0]", "timestamp": "2025-09-15T21:27:42.981340"}
{"prompt": "Extract phone (123-456-7890) from text.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T21:27:47.717223"}
{"prompt": "Check if 29 is prime.", "function": "is_prime", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T21:28:40.346085"}
{"prompt": "Find depth of binary tree root-left-right.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T21:28:49.231739"}
{"prompt": "Replace 'cat' with 'dog' in 'The cat sat'.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T21:28:49.238980"}
{"prompt": "Parse '{\"a\":1,\"b\":2}' \u2192 print keys.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T21:28:49.244981"}
{"prompt": "Insert [1,'Alice'] into users table.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T21:28:49.251985"}
{"prompt": "Check if 'madam' is palindrome.", "function": "is_palindrome", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T21:28:50.599046"}
{"prompt": "Print date/time in YYYY-MM-DD.", "function": "system", "status": "pass", "details": "System utility code detected", "timestamp": "2025-09-15T21:28:50.599046"}
{"prompt": "Measure time to run loop 1\u201310000.", "function": "system", "status": "pass", "details": "System utility code detected", "timestamp": "2025-09-15T21:28:51.363360"}
{"prompt": "Generate first 10 Fibonacci numbers.", "function": "fibonacci", "status": "fail", "details": "Input 1: expected [0, 0], got [0]", "timestamp": "2025-09-15T21:28:51.363360"}
{"prompt": "Extract phone (123-456-7890) from text.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T21:28:51.378982"}
{"prompt": "Check if 29 is prime.", "function": null, "status": "unsupported", "details": "Execution failed: invalid syntax (<string>, line 1)", "timestamp": "2025-09-15T21:29:00.006128"}
{"prompt": "Find depth of binary tree root-left-right.", "function": null, "status": "unsupported", "details": "Execution failed: invalid syntax (<string>, line 1)", "timestamp": "2025-09-15T21:29:14.810297"}
{"prompt": "Replace 'cat' with 'dog' in 'The cat sat'.", "function": null, "status": "unsupported", "details": "Execution failed: invalid syntax (<string>, line 1)", "timestamp": "2025-09-15T21:29:19.296648"}
{"prompt": "Parse '{\"a\":1,\"b\":2}' \u2192 print keys.", "function": "system", "status": "pass", "details": "System utility code detected", "timestamp": "2025-09-15T21:29:23.202903"}
{"prompt": "Insert [1,'Alice'] into users table.", "function": "database", "status": "pass", "details": "Database code detected", "timestamp": "2025-09-15T21:29:28.267297"}
{"prompt": "Check if 'madam' is palindrome.", "function": null, "status": "unsupported", "details": "Execution failed: invalid syntax (<string>, line 1)", "timestamp": "2025-09-15T21:29:30.188930"}
{"prompt": "Print date/time in YYYY-MM-DD.", "function": "system", "status": "pass", "details": "System utility code detected", "timestamp": "2025-09-15T21:29:33.705437"}
{"prompt": "Measure time to run loop 1\u201310000.", "function": "system", "status": "pass", "details": "System utility code detected", "timestamp": "2025-09-15T21:29:37.628349"}
{"prompt": "Generate first 10 Fibonacci numbers.", "function": null, "status": "unsupported", "details": "Execution failed: invalid syntax (<string>, line 1)", "timestamp": "2025-09-15T21:29:39.409621"}
{"prompt": "Extract phone (123-456-7890) from text.", "function": null, "status": "unsupported", "details": "Execution failed: invalid syntax (<string>, line 1)", "timestamp": "2025-09-15T21:29:43.630346"}
{"prompt": "Check if 29 is prime.", "function": "is_prime", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T21:29:48.786647"}
{"prompt": "Find depth of binary tree root-left-right.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T21:29:50.192894"}
{"prompt": "Replace 'cat' with 'dog' in 'The cat sat'.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T21:29:50.865188"}
{"prompt": "Parse '{\"a\":1,\"b\":2}' \u2192 print keys.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T21:29:53.226815"}
{"prompt": "Insert [1,'Alice'] into users table.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T21:29:57.200531"}
{"prompt": "Check if 'madam' is palindrome.", "function": "is_palindrome", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T21:29:59.044283"}
{"prompt": "Print date/time in YYYY-MM-DD.", "function": "system", "status": "pass", "details": "System utility code detected", "timestamp": "2025-09-15T21:30:01.202744"}
{"prompt": "Measure time to run loop 1\u201310000.", "function": "system", "status": "pass", "details": "System utility code detected", "timestamp": "2025-09-15T21:30:04.579717"}
{"prompt": "Generate first 10 Fibonacci numbers.", "function": "fibonacci", "status": "fail", "details": "Input 1: expected [0, 0], got [0]", "timestamp": "2025-09-15T21:30:05.394222"}
{"prompt": "Extract phone (123-456-7890) from text.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T21:30:09.820172"}
{"prompt": "Print current working directory.", "function": "system", "status": "pass", "details": "System utility code detected", "timestamp": "2025-09-15T22:19:19.706934"}
{"prompt": "GET https://example.com \u2192 print status code.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T22:19:19.753804"}
{"prompt": "Delete temp.txt from folder.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T22:19:19.769453"}
{"prompt": "Find word frequency in 'this is a test this is'.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T22:19:23.709910"}
{"prompt": "Capitalize each word in 'python coding challenge'.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T22:19:23.709910"}
{"prompt": "Count rows in students table.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T22:19:23.709910"}
{"prompt": "Write a recursive function to calculate factorial of n.", "function": "factorial", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T22:19:25.146510"}
{"prompt": "Sort [9,5,1,7,3] ascending.", "function": "sort_list", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T22:19:26.462189"}
{"prompt": "Compute factorial(10000).", "function": "factorial", "status": "pass", "details": "All 2 test cases passed", "timestamp": "2025-09-15T22:19:26.477826"}
{"prompt": "Merge a.txt and b.txt into merged.txt.", "function": null, "status": "invalid", "details": "No valid code generated", "timestamp": "2025-09-15T22:19:26.477826"}
