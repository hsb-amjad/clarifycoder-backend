{"prompt": "Find depth of binary tree root-left-right.", "qa_pairs": [], "timestamp": "2025-09-16T21:17:57.513097"}
{"prompt": "Download image.jpg from URL.", "qa_pairs": [], "timestamp": "2025-09-16T21:19:45.125958"}
{"prompt": "List of 1e8 zeros.", "qa_pairs": [], "timestamp": "2025-09-16T21:19:53.264566"}
{"prompt": "Insert [1,'Alice'] into users table.", "qa_pairs": [], "timestamp": "2025-09-16T21:20:12.308410"}
{"prompt": "Insert [1,'Alice'] into users table.", "qa_pairs": [], "timestamp": "2025-09-16T21:26:38.526631"}
{"prompt": "Insert [1,'Alice'] into users table.", "qa_pairs": [{"question": "What database management system are you using?", "answer": "mongodb"}], "timestamp": "2025-09-16T21:29:43.722770"}
{"prompt": "Parse JSON {'user':'Alice'} and print name.", "qa_pairs": [{"question": "What programming language should be used for parsing the JSON?", "answer": "c++"}], "timestamp": "2025-09-16T21:30:07.690501"}
{"prompt": "Train CNN with TensorFlow here.", "qa_pairs": [{"question": "What specific task or dataset do you want to use for training the CNN?", "answer": "Image classification."}], "timestamp": "2025-09-16T21:30:22.781833"}
{"prompt": "Send GET with header {'Auth':'token'}.", "qa_pairs": [{"question": "What URL should the GET request be sent to?", "answer": "Depends on context."}], "timestamp": "2025-09-16T21:30:44.752107"}
{"prompt": "Find depth of binary tree root-left-right.", "qa_pairs": [{"question": "Do you want maximum depth, minimum depth, or all levels?", "answer": "All levels."}], "timestamp": "2025-09-16T21:37:26.892509"}
{"prompt": "Check if 'madam' is palindrome.", "qa_pairs": [{"question": "Should I ignore case and spaces when checking palindrome?", "answer": "Yes."}], "timestamp": "2025-09-16T21:37:27.956906"}
{"prompt": "Measure time to run loop 1\u201310000.", "qa_pairs": [{"question": "Do you want current system time, execution time, or formatted date?", "answer": "Formatted date."}], "timestamp": "2025-09-16T21:37:28.737728"}
{"prompt": "Create table employees(id,name).", "qa_pairs": [{"question": "What schema should the new table have?", "answer": "Depends on requirements."}], "timestamp": "2025-09-16T21:37:34.121171"}
{"prompt": "Find max in [3,8,2].", "qa_pairs": [{"question": "Find maximum in what (list, dict, matrix)?", "answer": "List."}], "timestamp": "2025-09-16T21:37:35.652404"}
{"prompt": "Sort {'a':3,'b':1,'c':2} by value ascending.", "qa_pairs": [{"question": "What type of data do you want to sort (list, dictionary, dataframe)?", "answer": "List."}], "timestamp": "2025-09-16T21:37:37.325706"}
{"prompt": "Reverse characters of 'hello'.", "qa_pairs": [{"question": "Do you want to reverse characters or words?", "answer": "Characters."}], "timestamp": "2025-09-16T21:37:42.572246"}
{"prompt": "Send GET with header {'Auth':'token'}.", "qa_pairs": [{"question": "Should I include authentication or custom headers?", "answer": "Yes, both."}], "timestamp": "2025-09-16T21:37:43.322645"}
{"prompt": "Find depth of binary tree root-left-right.", "qa_pairs": [{"question": "What specific method or approach do you want to use to find the depth of the binary tree?", "answer": "Depth-first search."}], "timestamp": "2025-09-16T21:37:53.778327"}
{"prompt": "Parse '{\"a\":1,\"b\":2}' \u2192 print keys.", "qa_pairs": [{"question": "What format should the keys be printed in?", "answer": "Key format."}], "timestamp": "2025-09-16T21:38:01.597995"}
{"prompt": "Insert [1,'Alice'] into users table.", "qa_pairs": [{"question": "What database management system are you using?", "answer": "Not applicable."}], "timestamp": "2025-09-16T21:38:06.679835"}
{"prompt": "Print date/time in YYYY-MM-DD.", "qa_pairs": [{"question": "What specific date/time do you want to print?", "answer": "October 2023."}], "timestamp": "2025-09-16T21:38:13.746507"}
{"prompt": "Measure time to run loop 1\u201310000.", "qa_pairs": [{"question": "What specific programming language or environment do you want to use for measuring the time?", "answer": "Python."}], "timestamp": "2025-09-16T21:38:17.269453"}
{"prompt": "Build full chess game in Python.", "qa_pairs": [{"question": "What specific features or functionalities do you want the chess game to include?", "answer": "Multiplayer, AI, tutorials."}], "timestamp": "2025-09-16T21:38:38.629822"}
{"prompt": "Append 'error' to log.txt.", "qa_pairs": [{"question": "What specific format or content should the 'error' message have when appending to log.txt?", "answer": "\"Error: [message]\""}], "timestamp": "2025-09-16T21:38:53.821411"}
{"prompt": "Create table employees(id,name).", "qa_pairs": [{"question": "What specific attributes or data types should the 'id' and 'name' columns have?", "answer": "Integer, String."}], "timestamp": "2025-09-16T21:38:58.282000"}
{"prompt": "Check if '(a+b)' is balanced.", "qa_pairs": [{"question": "What do you mean by \"balanced\"? Are you referring to the balance of parentheses only?", "answer": "Parentheses balance."}], "timestamp": "2025-09-16T21:39:17.499146"}
{"prompt": "Check 'test@mail.com' valid.", "qa_pairs": [{"question": "What criteria should be used to determine if the email is valid?", "answer": "Format, domain, existence."}], "timestamp": "2025-09-16T21:39:24.388952"}
{"prompt": "Create folder 'backup'.", "qa_pairs": [{"question": "What location should the 'backup' folder be created in?", "answer": "User directory."}], "timestamp": "2025-09-16T21:39:29.313428"}
{"prompt": "GET https://example.com \u2192 print status code.", "qa_pairs": [{"question": "What programming language or environment are you using to make the GET request?", "answer": "Not applicable."}], "timestamp": "2025-09-16T21:39:42.217246"}
{"prompt": "Send GET with header {'Auth':'token'}.", "qa_pairs": [{"question": "What is the URL you want to send the GET request to?", "answer": "Not applicable."}], "timestamp": "2025-09-16T21:39:45.906882"}
{"prompt": "Check if notes.txt exists.", "qa_pairs": [{"question": "What should be done if notes.txt does not exist?", "answer": "Create file."}], "timestamp": "2025-09-16T21:39:54.963985"}
{"prompt": "Find depth of binary tree root-left-right.", "qa_pairs": [{"question": "What specific method or approach do you want to use to find the depth of the binary tree?", "answer": "Depth-first search."}], "timestamp": "2025-09-16T21:40:04.339442"}
{"prompt": "Parse '{\"a\":1,\"b\":2}' \u2192 print keys.", "qa_pairs": [{"question": "What format do you want the keys printed in?", "answer": "Not specified."}], "timestamp": "2025-09-16T21:40:07.404518"}
{"prompt": "Insert [1,'Alice'] into users table.", "qa_pairs": [{"question": "What database management system are you using?", "answer": "Not applicable."}], "timestamp": "2025-09-16T21:40:09.546682"}
{"prompt": "Print date/time in YYYY-MM-DD.", "qa_pairs": [{"question": "What specific date/time do you want to print?", "answer": "Not applicable."}], "timestamp": "2025-09-16T21:40:13.084895"}
{"prompt": "Measure time to run loop 1\u201310000.", "qa_pairs": [{"question": "What specific programming language or environment do you want to use for measuring the time?", "answer": "Python."}], "timestamp": "2025-09-16T21:40:15.084896"}
{"prompt": "Build full chess game in Python.", "qa_pairs": [{"question": "What specific features or functionalities do you want the chess game to have?", "answer": "Multiplayer, AI, tutorials."}], "timestamp": "2025-09-16T21:40:29.989203"}
{"prompt": "Append 'error' to log.txt.", "qa_pairs": [{"question": "What specific format or content should the 'error' message have when appending to log.txt?", "answer": "Timestamp, error description."}], "timestamp": "2025-09-16T21:40:33.664444"}
{"prompt": "Create table employees(id,name).", "qa_pairs": [{"question": "What specific attributes or data types should the 'id' and 'name' columns have?", "answer": "Integer, String."}], "timestamp": "2025-09-16T21:40:36.121058"}
{"prompt": "Check if '(a+b)' is balanced.", "qa_pairs": [{"question": "What do you mean by \"balanced\"? Are you referring to the balance of parentheses only?", "answer": "Parentheses balance."}], "timestamp": "2025-09-16T21:40:46.727150"}
{"prompt": "Check 'test@mail.com' valid.", "qa_pairs": [{"question": "What criteria should be used to determine if the email is valid?", "answer": "Format, domain, existence."}], "timestamp": "2025-09-16T21:40:48.717912"}
{"prompt": "GET https://example.com \u2192 print status code.", "qa_pairs": [{"question": "What programming language or environment are you using to make the GET request?", "answer": "Not applicable."}], "timestamp": "2025-09-16T21:40:55.018983"}
{"prompt": "Send GET with header {'Auth':'token'}.", "qa_pairs": [{"question": "What URL should the GET request be sent to?", "answer": "Specify endpoint."}], "timestamp": "2025-09-16T21:40:57.019391"}
{"prompt": "Check if notes.txt exists.", "qa_pairs": [{"question": "What should be done if notes.txt does not exist?", "answer": "Create file."}], "timestamp": "2025-09-16T21:41:05.310782"}
